<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfedu.mapper.loan.RiskMapper">
  <resultMap id="BaseResultMap" type="com.qfedu.domain.loan.Risk">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="aid" jdbcType="INTEGER" property="aid" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qfedu.domain.loan.Risk">
    <result column="url" jdbcType="LONGVARCHAR" property="url" />
  </resultMap>
  <sql id="Base_Column_List">
    id, aid, type, flag, score
  </sql>
  <sql id="Blob_Column_List">
    url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_risk
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_risk
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qfedu.domain.loan.Risk">
    insert into t_risk (id, aid, type, 
      flag, score, url
      )
    values (#{id,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{flag,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{url,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qfedu.domain.loan.Risk">
    insert into t_risk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="aid != null">
        aid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="url != null">
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qfedu.domain.loan.Risk">
    update t_risk
    <set>
      <if test="aid != null">
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qfedu.domain.loan.Risk">
    update t_risk
    set aid = #{aid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      url = #{url,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qfedu.domain.loan.Risk">
    update t_risk
    set aid = #{aid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>